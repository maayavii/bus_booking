# Generated by Django 5.1 on 2024-12-16 13:13

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bus_number', models.CharField(max_length=20, unique=True)),
                ('bus_model', models.CharField(max_length=50)),
                ('total_seats', models.PositiveIntegerField()),
                ('available_seats', models.PositiveIntegerField(default=0)),
                ('amenities', models.JSONField(default=list)),
                ('departure_time', models.TimeField()),
                ('arrival_time', models.TimeField()),
                ('departure_date', models.DateField()),
                ('price_per_seat', models.DecimalField(decimal_places=2, default=1, max_digits=6)),
            ],
        ),
        migrations.CreateModel(
            name='Stop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Stops',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=30)),
                ('is_superuser', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('username', models.CharField(blank=True, max_length=150, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=30)),
                ('destination', models.CharField(max_length=30)),
                ('price_per_seat', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('num_seats', models.PositiveIntegerField(null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('travel_date', models.DateField(null=True)),
                ('travel_time', models.TimeField(null=True)),
                ('status', models.CharField(choices=[('B', 'Booked'), ('C', 'Cancelled')], default='B', max_length=2)),
                ('seat_number', models.IntegerField()),
                ('name', models.CharField(default='unknown', max_length=100)),
                ('phone', models.CharField(default='not given', max_length=15)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('bus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='myapp.bus')),
            ],
        ),
        migrations.CreateModel(
            name='BusCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=50, unique=True)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('website', models.URLField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_name', models.CharField(max_length=100)),
                ('total_distance', models.DecimalField(decimal_places=2, max_digits=6)),
                ('base_fare_per_km', models.DecimalField(decimal_places=2, max_digits=5)),
                ('route_type', models.CharField(choices=[('local', 'Local'), ('intercity', 'Intercity'), ('express', 'Express')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.buscompany')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_end', to='myapp.stop')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_start', to='myapp.stop')),
            ],
        ),
        migrations.AddField(
            model_name='bus',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buses', to='myapp.busroute'),
        ),
        migrations.CreateModel(
            name='BusSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('MONDAY', 'Monday'), ('TUESDAY', 'Tuesday'), ('WEDNESDAY', 'Wednesday'), ('THURSDAY', 'Thursday'), ('FRIDAY', 'Friday'), ('SATURDAY', 'Saturday'), ('SUNDAY', 'Sunday')], max_length=10)),
                ('departure_time', models.TimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='myapp.bus')),
            ],
        ),
        migrations.CreateModel(
            name='RouteStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('bus_route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.busroute')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.stop')),
            ],
        ),
        migrations.AddField(
            model_name='busroute',
            name='stops',
            field=models.ManyToManyField(through='myapp.RouteStop', to='myapp.stop'),
        ),
    ]
